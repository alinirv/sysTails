// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  email       String   @unique
  name        String
  password    String
  characters  Character[]
  sheets      Sheet[]
  campaigns   Campaign[] 
}

model Character {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  name            String 
  legacy          String
  legacyAbilities Json
  parameters      Json
  combat          Json
  knowledge       Json
  userId          String   @db.ObjectId  // Chave estrangeira para o usu√°rio
  user            User     @relation(fields: [userId], references: [id])
  sheets          Sheet[]  
}

model Sheet {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  name           String 
  pda            Int
  pointsLife     Int
  pointsEnergy   Int
  movement       Int
  block          Int
  equipment      Json
  inventory      Json
  userId         String   @db.ObjectId
  user           User     @relation(fields: [userId], references: [id])
  characterId    String   @db.ObjectId  // Chave estrangeira para o personagem
  character      Character @relation(fields: [characterId], references: [id])
  createdAt      DateTime @default(now())
  campaigns      CampaignSheets[] 
}

model Campaign {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  masterName  String
  status      String   
  token       String   @unique
  userId      String   @db.ObjectId  
  user        User     @relation(fields: [userId], references: [id]) 
  sheets      CampaignSheets[] 
  createdAt   DateTime @default(now()) 
  updatedAt   DateTime @updatedAt 
}


model CampaignSheets {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId  
  campaignId String @db.ObjectId
  sheetId    String @db.ObjectId
  campaign   Campaign @relation(fields: [campaignId], references: [id])
  sheet      Sheet @relation(fields: [sheetId], references: [id])
  assignedAt DateTime @default(now())
  assignedBy String 
  @@unique([campaignId, sheetId])
}

